name: Release and Hotfix Finish

###
#
# Finishes Git flow for release and hotfixes
#
# Trigger: code merged into master branch
#
###

on:
  pull_request:
    branches:
      - master
    types:
      - closed

jobs:
  release:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && (startsWith(github.event.pull_request.head.ref, 'release/') || startsWith(github.event.pull_request.head.ref, 'hotfix/'))
    strategy:
      matrix:
        java: [ 11 ]
    name: Finish the release
    timeout-minutes: 30
    outputs:
      release-version: ${{ steps.target.outputs.version }}
    env:
      DEVOPS_CICD_ECR_BASE_URL: ${{ secrets.DEVOPS_CICD_ECR_BASE_URL }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      BB_USERNAME: ${{ secrets.BB_USERNAME }}
      BB_PASSWORD: ${{ secrets.BB_PASSWORD }}
      BB_GITHUB_PACKAGES_USER: botuser
      BB_GITHUB_PACKAGES_PAT: ${{ secrets.BB_GITHUB_PACKAGES_PAT }}
      RELEASE_VERSION_PREFIX: ${{ secrets.RELEASE_VERSION_PREFIX }}
      LABELS: ${{ join(github.event.pull_request.labels.*.name, ',') }}

    # Set flow type
    steps:
      - id: flow-type
        run:  |
          echo ::set-output name=release::${{ startsWith(github.event.pull_request.head.ref, 'release/') }}
          echo ::set-output name=hotfix::${{ startsWith(github.event.pull_request.head.ref, 'hotfix/') }}
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
            ${{ runner.os }}-

      - name: Setup java ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}

      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v9
        with:
          repositories: '[{ "id": "Backbase Repository", "url": "https://repo.backbase.com/repo" }, { "id": "github", "url": "https://maven.pkg.github.com/${GITHUB_REPOSITORY_OWNER}/mambu-clients" }]'
          plugin_repositories: '[{ "id": "Backbase Repository", "url": "https://repo.backbase.com/repo" }]'
          servers: '[{ "id": "Backbase Repository", "username": "${BB_USERNAME}", "password": "${BB_PASSWORD}" }, { "id": "github", "username": "${BB_GITHUB_PACKAGES_USER}", "password": "${BB_GITHUB_PACKAGES_PAT}" }]'

      # Get project version from ref - merged branch
      - name: Get Project Version
        id: target
        run: |
          MAJOR=$( mvn help:evaluate -Dexpression=project.artifact.selectedVersion.majorVersion -q -DforceStdout )
          MINOR=$( mvn help:evaluate -Dexpression=project.artifact.selectedVersion.minorVersion -q -DforceStdout )
          INCREMENTAL=$( mvn help:evaluate -Dexpression=project.artifact.selectedVersion.incrementalVersion -q -DforceStdout )

          if [[ $LABELS == *"bug:hotfix"* ]]; then
            echo ::set-output name=version::`echo $MAJOR.$MINOR.$INCREMENTAL`
          else
            echo ::set-output name=version::`echo $MAJOR.$MINOR.0`
          fi

      - name: Set git username and email
        run: |
          git config --global user.email "bot@backbase.com"
          git config --global user.name "Release BOT"

      - name: Update master version
        if: steps.flow-type.outputs.release == 'true'
        run: |
          mvn build-helper:parse-version versions:set -DnewVersion=\${{ steps.target.outputs.version }} versions:commit -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEVOPS_CICD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEVOPS_CICD_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.DEVOPS_CICD_AWS_REGION }}

      - name: Get AWS ECR credentials
        id: ecr-credentials
        run: |
          echo "::set-output name=username::AWS"
          echo "::set-output name=password::`aws ecr get-login-password --region ${{ secrets.DEVOPS_CICD_AWS_REGION }}`"

      # Only for release. For hotfix it's done in hotfix-version-update workflow
      - name: Build docker image - release
        if: steps.flow-type.outputs.release == 'true'
        run: mvn clean package -Pdocker-image -Pno-scs -Dmaven.test.skip -Djib.to.auth.username=${{ steps.ecr-credentials.outputs.username }}  -Djib.to.auth.password=${{ steps.ecr-credentials.outputs.password }}

      - name: Push updated version to origin/master
        if: steps.flow-type.outputs.release == 'true'
        run: |
          git add --all
          git commit --allow-empty -m "Update version - release: ${{ steps.target.outputs.version }}"
          git push

      - name: Extract Backbase BOM version
        id: bom-version
        run: |
          bomVersion=$(mvn help:evaluate -Dexpression=backbase-bom.version -q -DforceStdout)
          echo "Backbase BOM version: $bomVersion"
          echo ::set-output name=version::`echo $bomVersion`

      # Tag master
      - name: Add tag
        if: (!contains(steps.bom-version.version, 'null'))
        run: |
          git tag -a ${{ steps.bom-version.outputs.version }}-${{ steps.target.outputs.version }} -m "Release ${{ steps.bom-version.outputs.version }}-${{ steps.target.outputs.version }}"
          git push origin ${{ steps.bom-version.outputs.version}}-${{ steps.target.outputs.version }}

      - name: Delete ${{ github.event.pull_request.head.ref }} branch
        run: |
          git fetch
          git push origin --delete ${{ github.event.pull_request.head.ref }}

  update-develop:
    runs-on: ubuntu-latest
    needs: release
    strategy:
      matrix:
        java: [ 11 ]
    name: Post-release develop version update
    timeout-minutes: 30
    env:
      DEVOPS_CICD_ECR_BASE_URL: ${{ secrets.DEVOPS_CICD_ECR_BASE_URL }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      BB_USERNAME: ${{ secrets.BB_USERNAME }}
      BB_PASSWORD: ${{ secrets.BB_PASSWORD }}
      BB_GITHUB_PACKAGES_USER: botuser
      BB_GITHUB_PACKAGES_PAT: ${{ secrets.BB_GITHUB_PACKAGES_PAT }}
      RELEASE_VERSION_PREFIX: ${{ secrets.RELEASE_VERSION_PREFIX }}

    steps:
      - name: Checkout develop
        uses: actions/checkout@v2
        with:
          ref: develop

      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
            ${{ runner.os }}-

      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v9
        with:
          repositories: '[{ "id": "Backbase Repository", "url": "https://repo.backbase.com/repo" }, { "id": "github", "url": "https://maven.pkg.github.com/${GITHUB_REPOSITORY_OWNER}/mambu-clients" }]'
          plugin_repositories: '[{ "id": "Backbase Repository", "url": "https://repo.backbase.com/repo" }]'
          servers: '[{ "id": "Backbase Repository", "username": "${BB_USERNAME}", "password": "${BB_PASSWORD}" }, { "id": "github", "username": "${BB_GITHUB_PACKAGES_USER}", "password": "${BB_GITHUB_PACKAGES_PAT}" }]'

      - name: Extract metadata from develop version
        id: develop-version
        run: |
          version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          oldIFS=IFS
          IFS='-'
          read -ra versionTokens <<< "$version"
          if [ ${#versionTokens[@]} -ne 2 ]; then
          	echo "Wrong versionTokens array size: ${#versionTokens[@]}";
          	exit 1;
          fi
          echo "Extracted metadata part: ${versionTokens[1]}"
          echo ::set-output name=version::`echo $bomVersion`
          echo ::set-output name=metadata::`echo ${versionTokens[1]}`

      - name: Checkout master
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Create intermediate branch
        run: git checkout -b post-release/${{ needs.release.outputs.release-version }}

      - name: Set new develop version - ${{ needs.release.outputs.release-version }}-${{ steps.develop-version.outputs.metadata }}
        run: |
          mvn versions:set -DnewVersion="${{ needs.release.outputs.release-version }}-${{ steps.develop-version.outputs.metadata }}" versions:commit -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn

      - name: Set git username and email
        run: |
          git config --global user.email "bot@backbase.com"
          git config --global user.name "Release BOT"

      - name: Push updated version to develop
        run: |
          git add .
          git commit --message "New develop version: ${{ needs.release.outputs.release-version }}-${{ steps.develop-version.outputs.metadata }}"
          git push origin post-release/${{ needs.release.outputs.release-version }}

      - name: Create Pull Request - merge release/hotfix changes into develop
        uses: thomaseizinger/create-pull-request@master
        with:
          head: post-release/${{ needs.release.outputs.release-version }}
          base: develop
          title: Merge release/hotfix to develop - ${{ needs.release.outputs.release-version }}
          reviewers: ${{ join(github.event.pull_request.requested_reviewers.*.login, ',') }}
          body: |
            Release pull request #${{ github.event.pull_request.number }} was merged into master branch and version ${{ needs.release.outputs.release-version }} was released.
            Please review changes to be merged to develop.