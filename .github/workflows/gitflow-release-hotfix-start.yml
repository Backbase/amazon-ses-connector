name: Release and Hotfix Start

###
#
# Initiates release process from issues
#
# Trigger: issues opened with release or hotfix labels
#
###
on:
  issues:
    types: [ opened ]

jobs:
  compile:
    runs-on: ubuntu-latest
    if: contains(join(github.event.issue.labels.*.name, ' '), 'release:') || contains(join(github.event.issue.labels.*.name, ' '), 'bug:hotfix')
    strategy:
      matrix:
        java: [11]
    name: Initiates release or hotfix process from issues
    timeout-minutes: 30
    env:
      DEVOPS_CICD_ECR_BASE_URL: ${{ secrets.DEVOPS_CICD_ECR_BASE_URL }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      BB_USERNAME: ${{ secrets.BB_USERNAME }}
      BB_PASSWORD: ${{ secrets.BB_PASSWORD }}
      BB_GITHUB_PACKAGES_USER: botuser
      BB_GITHUB_PACKAGES_PAT: ${{ secrets.BB_GITHUB_PACKAGES_PAT }}

    steps:
      - id: flow-type
        run: |
          echo ::set-output name=release_minor::${{ contains(join(github.event.issue.labels.*.name, ' '), 'release:minor') }}
          echo ::set-output name=release_major::${{ contains(join(github.event.issue.labels.*.name, ' '), 'release:major') }}
          echo ::set-output name=hotfix::${{ contains(join(github.event.issue.labels.*.name, ' '), 'bug:hotfix') }}

      - name: Checkout develop
        uses: actions/checkout@v2
        if: steps.flow-type.outputs.release_major == 'true' || steps.flow-type.outputs.release_minor == 'true'
        with:
          ref: develop

      - name: Checkout master
        uses: actions/checkout@v2
        if: steps.flow-type.outputs.hotfix == 'true'
        with:
          ref: master

      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
            ${{ runner.os }}-

      - name: Setup java ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}

      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v9
        with:
          repositories: '[{ "id": "Backbase Repository", "url": "https://repo.backbase.com/repo" }, { "id": "github", "url": "https://maven.pkg.github.com/${GITHUB_REPOSITORY_OWNER}/mambu-clients" }]'
          plugin_repositories: '[{ "id": "Backbase Repository", "url": "https://repo.backbase.com/repo" }]'
          servers: '[{ "id": "Backbase Repository", "username": "${BB_USERNAME}", "password": "${BB_PASSWORD}" }, { "id": "github", "username": "${BB_GITHUB_PACKAGES_USER}", "password": "${BB_GITHUB_PACKAGES_PAT}" }]'

      - name: Set git username and email
        run: |
          git config --global user.email "bot@backbase.com"
          git config --global user.name "Release BOT"

      - name: Determine new project version
        id: target
        run: |
          echo "::group::Extracting project version"
          version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          oldIFS=IFS
          if [ ${{ steps.flow-type.outputs.hotfix }} == 'true' ]; then
            echo ::set-output name=oldVersion::`echo $version`
            IFS='.'
            read -ra semVerTokens <<< "$version"
            if [ ${#semVerTokens[@]} -ne 3 ]; then
              echo "Wrong semVerTokens array size: ${#semVerTokens[@]}";
              exit 1;
            fi
          else
            IFS='-'
            read -ra versionTokens <<< "$version"
            if [ ${#versionTokens[@]} -ne 2 ]; then
              echo "Wrong versionTokens array size: ${#versionTokens[@]}";
              exit 1;
            fi

            IFS='.'
            read -ra semVerTokens <<< "${versionTokens[0]}"
            if [ ${#semVerTokens[@]} -ne 3 ]; then
              echo "Wrong semVerTokens array size: ${#semVerTokens[@]}";
              exit 1;
            fi
          fi
          IFS=oldIFS

          MAJOR=${semVerTokens[0]}
          MINOR=${semVerTokens[1]}
          PATCH=${semVerTokens[2]}
          echo "::endgroup::"

          echo "::group::Determine new project version"
          if ${{ steps.flow-type.outputs.release_minor }} == 'true'
          then
            MINOR=`expr $MINOR + 1`
            NEW_VERSION=$MAJOR.$MINOR
          elif ${{ steps.flow-type.outputs.release_major }} == 'true'
          then
            MAJOR=`expr $MAJOR + 1`
            NEW_VERSION=$MAJOR.0
          elif ${{ steps.flow-type.outputs.hotfix }} == 'true'
          then
            PATCH=`expr $PATCH + 1`
            NEW_VERSION=$MAJOR.$MINOR.$PATCH
          fi
          echo "New project version: $NEW_VERSION"
          echo ::set-output name=version::`echo $NEW_VERSION`
          echo "::endgroup::"

      - name: Start new Release
        if: steps.flow-type.outputs.release_major == 'true' || steps.flow-type.outputs.release_minor == 'true'
        run: |
          mvn -B gitflow:release-start -DpushRemote=true -DbranchName=${{ steps.target.outputs.version }} -DreleaseVersion=${{ steps.target.outputs.version }}.0-RC -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn

      - name: Start new Hotfix
        if: steps.flow-type.outputs.hotfix == 'true'
        run: |
          mvn -B gitflow:hotfix-start -DpushRemote=true -DhotfixName=${{ github.event.inputs.hotfixName }} -DhotfixVersion=${{ steps.target.outputs.version }} -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn

      ##
      #
      # KEEP CHANGELOG
      #
      # These steps update the log file with the list provided in the
      # issue.
      #
      - name: Write to CHANGELOG.md
        env:
          delimiter: /## \[Unreleased\]/
          file: CHANGELOG.md
        run: |
          HEAD=`sed '${{ env.delimiter }}q' ${{ env.file }}`
          CONTENT=`sed -n '${{ env.delimiter }},${${{ env.delimiter }}!p;}' ${{ env.file }}`
          echo -e """$HEAD\n\n${{ github.event.issue.body }}\n$CONTENT""" > ${{ env.file }}
      - name: Update CHANGELOG.md
        uses: thomaseizinger/keep-a-changelog-new-release@1.2.1
        with:
          version: ${{ steps.target.outputs.version }}

      - name: Commit and push CHANGELOG.md
        run: |
          git add .
          git commit --message "Update changelog for ${{ steps.target.outputs.version }} release"
          git push origin

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEVOPS_CICD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEVOPS_CICD_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.DEVOPS_CICD_AWS_REGION }}

      - name: Get AWS ECR credentials
        id: ecr-credentials
        run: |
          echo "::set-output name=username::AWS"
          echo "::set-output name=password::`aws ecr get-login-password --region ${{ secrets.DEVOPS_CICD_AWS_REGION }}`"

      - name: Build docker image
        run: mvn clean package -Pdocker-image -Pno-scs -Dmaven.test.skip -Djib.to.auth.username=${{ steps.ecr-credentials.outputs.username }}  -Djib.to.auth.password=${{ steps.ecr-credentials.outputs.password }} -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn

      - name: Create Pull Request - release
        if: steps.flow-type.outputs.release_major == 'true' || steps.flow-type.outputs.release_minor == 'true'
        uses: thomaseizinger/create-pull-request@master
        with:
          head: 'release/${{ steps.target.outputs.version }}'
          base: master
          title: "Next release: ${{ steps.target.outputs.version }}"
          body: "Closes #${{ github.event.issue.number }}"
          reviewers: ${{ github.event.issue.user.login }}
          labels: ${{ join(github.event.issue.labels.*.name, ',') }}

      - name: Create Pull Request - hotfix
        if: steps.flow-type.outputs.hotfix == 'true'
        uses: thomaseizinger/create-pull-request@master
        with:
          head: 'hotfix/${{ steps.target.outputs.version }}'
          base: master
          title: "Hotfix to version: ${{ steps.target.outputs.oldVersion }}"
          body: "Closes #${{ github.event.issue.number }}"
          reviewers: ${{ github.event.issue.user.login }}
          labels: ${{ join(github.event.issue.labels.*.name, ',') }}
