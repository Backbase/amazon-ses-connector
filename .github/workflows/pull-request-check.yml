name: Pull Request Check

#
#   IMPORTANT TO KNOW
#
# - This workflow runs whenever new changes are pushed to an existing Pull Request
# - Runs on 'master', 'develop', 'release/*' and 'hotfix/*', 'bugfix/*' branches
#
# Note : First two PRs will be ignored by this workflow. The reason for that in the first-time cloning,
# there is possibility that project doesn't have integration with Sonar. To prevent failure for such case,
# Pull Request Check workflow won't be triggered for 'initialising master' and 'initialising develop' branches.
# But, of course, it will be triggered for later any PRs.

on: [pull_request]

jobs:
  compile:
    runs-on: ubuntu-latest
    if: ( github.event_name == 'pull_request' && (github.event.pull_request.number != '1' && github.event.pull_request.number != '2') )
    strategy:
      matrix:
        java: [11]
    name: Build project with Java ${{ matrix.java }} ensure quality and security gates
    timeout-minutes: 30
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    steps:
      - name: Generate token
        id: generate_token
        uses: navikt/github-app-token-generator@v1
        with:
          private-key: ${{ secrets.GIT_GITHUB_APP_PEM_FILE }}
          app-id: ${{ secrets.GIT_GITHUB_APP_ID }}

      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
          token: ${{ steps.generate_token.outputs.token }}

      - name: Setup Cache and Maven
        uses: ./.github/actions/setup-cache-and-maven
        with:
          mavenUsername: ${{ secrets.BAAS_BB_ARTIFACTORY_MAVEN_USERNAME }}
          mavenPassword: ${{ secrets.BAAS_BB_ARTIFACTORY_MAVEN_PASSWORD }}
          githubPackagesUser: botuser
          githubPackagesPassword: ${{ secrets.BB_GITHUB_PACKAGES_PAT }}

      - name: Bump version
        uses: ./.github/actions/bump-version
        with:
          token: ${{ steps.generate_token.outputs.token }}

      - name: Run tests and Sonar Cloud check
        uses: ./.github/actions/build-test-and-sonar
        with:
          githubProject: ${{ github.event.repository.name }}
